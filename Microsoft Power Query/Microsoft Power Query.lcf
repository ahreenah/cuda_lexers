object SyntAnal23: TLibSyntAnalyzer
  Formats = <
    item
      DisplayName = 'Id'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlue
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Comment'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGray
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Keyword'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clPurple
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Operator'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = 5796629
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      FormatFlags = [ffItalic, ffUnderline, ffStrikeOut, ffReadOnly, ffHidden, ffFontName, ffFontSize, ffFontCharset, ffVertAlign]
    end
    item
      DisplayName = 'String'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGreen
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'String 2'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clRed
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'datatype'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = 376632
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'FuncBegiin'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clWindowText
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end>
  TokenRules = <
    item
      DisplayName = 'operator'
      StyleName = 'Operator'
      TokenType = 10
      Expression = '\b(let|in)\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'comment 1'
      StyleName = 'Comment'
      Expression = '//.*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id'
      StyleName = 'Id'
      TokenType = 2
      Expression = '[a-zA-Z_]\w*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Operator'
      StyleName = 'Operator'
      TokenType = 10
      Expression = '[<>\(\)\[\]\{\}]'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'String 2'
      StyleName = 'String 2'
      Expression = '""""'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'String'
      StyleName = 'String'
      Expression = '(")(\\"|.)*?(\1|$)'
      ColumnFrom = 0
      ColumnTo = 0
    end>
  BlockRules = <
    item
      DisplayName = 'keyword'
      StyleName = 'Keyword'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'and'
            'as'
            'each'
            'else'
            'error'
            'false'
            'if'
            'in'
            'is'
            'let'
            'meta'
            'not'
            'or'
            'otherwise'
            'section'
            'shared'
            'then'
            'true'
            'try'
            'type')
          TokenTypes = 4
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Datatype'
      StyleName = 'datatype'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'function'
            'number'
            'table'
            'text')
          TokenTypes = 4
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Builtin Function'
      StyleName = 'Id'
      ConditionList = <
        item
          TagList.Strings = (
            '        | Access.Database'
            '        | ActiveDirectory.Domains'
            '        | AdoDotNet.DataSource'
            '        | AdoDotNet.Query'
            '        | AnalysisServices.Database'
            '        | AnalysisServices.Databases'
            '        | AzureStorage.Blobs'
            '        | AzureStorage.Tables'
            '        | Binary.Buffer'
            '        | Binary.Combine'
            '        | Binary.Compress'
            '        | Binary.Decompress'
            '        | Binary.From'
            '        | Binary.FromList'
            '        | Binary.FromText'
            '        | Binary.Length'
            '        | Binary.ToList'
            '        | Binary.ToText'
            '        | BinaryFormat.7BitEncodedSignedInteger'
            '        | BinaryFormat.7BitEncodedUnsignedInteger'
            '        | BinaryFormat.Binary'
            '        | BinaryFormat.Byte'
            '        | BinaryFormat.ByteOrder'
            '        | BinaryFormat.Choice'
            '        | BinaryFormat.Decimal'
            '        | BinaryFormat.Double'
            '        | BinaryFormat.Group'
            '        | BinaryFormat.Length'
            '        | BinaryFormat.List'
            '        | BinaryFormat.Null'
            '        | BinaryFormat.Record'
            '        | BinaryFormat.SignedInteger16'
            '        | BinaryFormat.SignedInteger32'
            '        | BinaryFormat.SignedInteger64'
            '        | BinaryFormat.Single'
            '        | BinaryFormat.Text'
            '        | BinaryFormat.Transform'
            '        | BinaryFormat.UnsignedInteger16'
            '        | BinaryFormat.UnsignedInteger32'
            '        | BinaryFormat.UnsignedInteger64'
            '        | Byte.From'
            '        | Character.FromNumber'
            '        | Character.ToNumber'
            '        | Combiner.CombineTextByDelimiter'
            '        | Combiner.CombineTextByEachDelimiter'
            '        | Combiner.CombineTextByLengths'
            '        | Combiner.CombineTextByPositions'
            '        | Combiner.CombineTextByRanges'
            '        | Comparer.Equals'
            '        | Comparer.FromCulture'
            '        | Comparer.Ordinal'
            '        | Comparer.OrdinalIgnoreCase'
            '        | Crypto.CreateHash'
            '        | Crypto.CreateHmac'
            '        | Csv.Document'
            '        | Cube.AddAndExpandDimensionColumn'
            '        | Cube.AddMeasureColumn'
            '        | Cube.ApplyParameter'
            '        | Cube.AttributeMemberId'
            '        | Cube.CollapseAndRemoveColumns'
            '        | Cube.Dimensions'
            '        | Cube.DisplayFolders'
            '        | Cube.Measures'
            '        | Cube.Parameters'
            '        | Cube.Transform'
            '        | Currency.From'
            '        | Date.AddDays'
            '        | Date.AddMonths'
            '        | Date.AddQuarters'
            '        | Date.AddWeeks'
            '        | Date.AddYears'
            '        | Date.Day'
            '        | Date.DayOfWeek'
            '        | Date.DayOfWeekName'
            '        | Date.DayOfYear'
            '        | Date.DaysInMonth'
            '        | Date.EndOfDay'
            '        | Date.EndOfMonth'
            '        | Date.EndOfQuarter'
            '        | Date.EndOfWeek'
            '        | Date.EndOfYear'
            '        | Date.From'
            '        | Date.FromText'
            '        | Date.IsInCurrentDay'
            '        | Date.IsInCurrentMonth'
            '        | Date.IsInCurrentQuarter'
            '        | Date.IsInCurrentWeek'
            '        | Date.IsInCurrentYear'
            '        | Date.IsInNextDay'
            '        | Date.IsInNextMonth'
            '        | Date.IsInNextNDays'
            '        | Date.IsInNextNMonths'
            '        | Date.IsInNextNQuarters'
            '        | Date.IsInNextNWeeks'
            '        | Date.IsInNextNYears'
            '        | Date.IsInNextQuarter'
            '        | Date.IsInNextWeek'
            '        | Date.IsInNextYear'
            '        | Date.IsInPreviousDay'
            '        | Date.IsInPreviousMonth'
            '        | Date.IsInPreviousNDays'
            '        | Date.IsInPreviousNMonths'
            '        | Date.IsInPreviousNQuarters'
            '        | Date.IsInPreviousNWeeks'
            '        | Date.IsInPreviousNYears'
            '        | Date.IsInPreviousQuarter'
            '        | Date.IsInPreviousWeek'
            '        | Date.IsInPreviousYear'
            '        | Date.IsInYearToDate'
            '        | Date.IsLeapYear'
            '        | Date.Month'
            '        | Date.MonthName'
            '        | Date.QuarterOfYear'
            '        | Date.StartOfDay'
            '        | Date.StartOfMonth'
            '        | Date.StartOfQuarter'
            '        | Date.StartOfWeek'
            '        | Date.StartOfYear'
            '        | Date.ToRecord'
            '        | Date.ToText'
            '        | Date.WeekOfMonth'
            '        | Date.WeekOfYear'
            '        | Date.Year'
            '        | DateTime.AddZone'
            '        | DateTime.Date'
            '        | DateTime.FixedLocalNow'
            '        | DateTime.From'
            '        | DateTime.FromFileTime'
            '        | DateTime.FromText'
            '        | DateTime.IsInCurrentHour'
            '        | DateTime.IsInCurrentMinute'
            '        | DateTime.IsInCurrentSecond'
            '        | DateTime.IsInNextHour'
            '        | DateTime.IsInNextMinute'
            '        | DateTime.IsInNextNHours'
            '        | DateTime.IsInNextNMinutes'
            '        | DateTime.IsInNextNSeconds'
            '        | DateTime.IsInNextSecond'
            '        | DateTime.IsInPreviousHour'
            '        | DateTime.IsInPreviousMinute'
            '        | DateTime.IsInPreviousNHours'
            '        | DateTime.IsInPreviousNMinutes'
            '        | DateTime.IsInPreviousNSeconds'
            '        | DateTime.IsInPreviousSecond'
            '        | DateTime.LocalNow'
            '        | DateTime.Time'
            '        | DateTime.ToRecord'
            '        | DateTime.ToText'
            '        | DateTimeZone.FixedLocalNow'
            '        | DateTimeZone.FixedUtcNow'
            '        | DateTimeZone.From'
            '        | DateTimeZone.FromFileTime'
            '        | DateTimeZone.FromText'
            '        | DateTimeZone.LocalNow'
            '        | DateTimeZone.RemoveZone'
            '        | DateTimeZone.SwitchZone'
            '        | DateTimeZone.ToLocal'
            '        | DateTimeZone.ToRecord'
            '        | DateTimeZone.ToText'
            '        | DateTimeZone.ToUtc'
            '        | DateTimeZone.UtcNow'
            '        | DateTimeZone.ZoneHours'
            '        | DateTimeZone.ZoneMinutes'
            '        | DB2.Database'
            '        | Decimal.From'
            '        | Delta.Since'
            '        | Diagnostics.ActivityId'
            '        | Diagnostics.Trace'
            '        | DirectQueryCapabilities.From'
            '        | Double.From'
            '        | Duration.Days'
            '        | Duration.From'
            '        | Duration.FromText'
            '        | Duration.Hours'
            '        | Duration.Minutes'
            '        | Duration.Seconds'
            '        | Duration.ToRecord'
            '        | Duration.TotalDays'
            '        | Duration.TotalHours'
            '        | Duration.TotalMinutes'
            '        | Duration.TotalSeconds'
            '        | Duration.ToText'
            '        | Embedded.Value'
            '        | Error.Record'
            '        | Error.Unexpected'
            '        | Excel.CurrentWorkbook'
            '        | Excel.Workbook'
            '        | Exchange.Contents'
            '        | Expression.Constant'
            '        | Expression.Evaluate'
            '        | Expression.Identifier'
            '        | Extension.Contents'
            '        | Extension.CredentialError'
            '        | Extension.CurrentApplication'
            '        | Extension.CurrentCredential'
            '        | Facebook.Graph'
            '        | File.Contents'
            '        | Folder.Contents'
            '        | Folder.Files'
            '        | Function.Invoke'
            '        | Function.InvokeAfter'
            '        | Function.IsDataSource'
            '        | Hdfs.Contents'
            '        | Hdfs.Files'
            '        | HdInsight.Containers'
            '        | HdInsight.Contents'
            '        | HdInsight.Files'
            '        | Informix.Database'
            '        | Int16.From'
            '        | Int32.From'
            '        | Int64.From'
            '        | Int8.From'
            '        | Json.Document'
            '        | Json.FromValue'
            '        | Lines.FromBinary'
            '        | Lines.FromText'
            '        | Lines.ToBinary'
            '        | Lines.ToText'
            '        | List.Accumulate'
            '        | List.AllTrue'
            '        | List.Alternate'
            '        | List.AnyTrue'
            '        | List.Average'
            '        | List.Buffer'
            '        | List.Combine'
            '        | List.Contains'
            '        | List.ContainsAll'
            '        | List.ContainsAny'
            '        | List.Count'
            '        | List.Covariance'
            '        | List.Dates'
            '        | List.DateTimes'
            '        | List.DateTimeZones'
            '        | List.Difference'
            '        | List.Distinct'
            '        | List.Durations'
            '        | List.FindText'
            '        | List.First'
            '        | List.FirstN'
            '        | List.Generate'
            '        | List.InsertRange'
            '        | List.Intersect'
            '        | List.IsDistinct'
            '        | List.IsEmpty'
            '        | List.Last'
            '        | List.LastN'
            '        | List.MatchesAll'
            '        | List.MatchesAny'
            '        | List.Max'
            '        | List.MaxN'
            '        | List.Median'
            '        | List.Min'
            '        | List.MinN'
            '        | List.Mode'
            '        | List.Modes'
            '        | List.NonNullCount'
            '        | List.Numbers'
            '        | List.PositionOf'
            '        | List.PositionOfAny'
            '        | List.Positions'
            '        | List.Product'
            '        | List.Random'
            '        | List.Range'
            '        | List.RemoveFirstN'
            '        | List.RemoveItems'
            '        | List.RemoveLastN'
            '        | List.RemoveMatchingItems'
            '        | List.RemoveNulls'
            '        | List.RemoveRange'
            '        | List.Repeat'
            '        | List.ReplaceMatchingItems'
            '        | List.ReplaceRange'
            '        | List.ReplaceValue'
            '        | List.Reverse'
            '        | List.Select'
            '        | List.Single'
            '        | List.SingleOrDefault'
            '        | List.Skip'
            '        | List.Sort'
            '        | List.StandardDeviation'
            '        | List.Sum'
            '        | List.Times'
            '        | List.Transform'
            '        | List.TransformMany'
            '        | List.Union'
            '        | List.Zip'
            '        | Logical.From'
            '        | Logical.FromText'
            '        | Logical.ToText'
            '        | Marketplace.Subscriptions'
            '        | MQ.Queue'
            '        | MySQL.Database'
            '        | Number.Abs'
            '        | Number.Acos'
            '        | Number.Asin'
            '        | Number.Atan'
            '        | Number.Atan2'
            '        | Number.BitwiseAnd'
            '        | Number.BitwiseNot'
            '        | Number.BitwiseOr'
            '        | Number.BitwiseShiftLeft'
            '        | Number.BitwiseShiftRight'
            '        | Number.BitwiseXor'
            '        | Number.Combinations'
            '        | Number.Cos'
            '        | Number.Cosh'
            '        | Number.Exp'
            '        | Number.Factorial'
            '        | Number.From'
            '        | Number.FromText'
            '        | Number.IntegerDivide'
            '        | Number.IsEven'
            '        | Number.IsNaN'
            '        | Number.IsOdd'
            '        | Number.Ln'
            '        | Number.Log'
            '        | Number.Log10'
            '        | Number.Mod'
            '        | Number.Permutations'
            '        | Number.Power'
            '        | Number.Random'
            '        | Number.RandomBetween'
            '        | Number.Round'
            '        | Number.RoundAwayFromZero'
            '        | Number.RoundDown'
            '        | Number.RoundTowardZero'
            '        | Number.RoundUp'
            '        | Number.Sign'
            '        | Number.Sin'
            '        | Number.Sinh'
            '        | Number.Sqrt'
            '        | Number.Tan'
            '        | Number.Tanh'
            '        | Number.ToText'
            '        | OData.Feed'
            '        | Odbc.DataSource'
            '        | Odbc.Query'
            '        | OleDb.DataSource'
            '        | OleDb.Query'
            '        | Oracle.Database'
            '        | Percentage.From'
            '        | PostgreSQL.Database'
            '        | RData.FromBinary'
            '        | Record.AddField'
            '        | Record.Combine'
            '        | Record.Field'
            '        | Record.FieldCount'
            '        | Record.FieldNames'
            '        | Record.FieldOrDefault'
            '        | Record.FieldValues'
            '        | Record.FromList'
            '        | Record.FromTable'
            '        | Record.HasFields'
            '        | Record.RemoveFields'
            '        | Record.RenameFields'
            '        | Record.ReorderFields'
            '        | Record.SelectFields'
            '        | Record.ToList'
            '        | Record.ToTable'
            '        | Record.TransformFields'
            '        | Replacer.ReplaceText'
            '        | Replacer.ReplaceValue'
            '        | Resource.Access'
            '        | RowExpression.Column'
            '        | RowExpression.From'
            '        | Salesforce.Data'
            '        | Salesforce.Reports'
            '        | SapHana.Database'
            '        | SharePoint.Contents'
            '        | SharePoint.Files'
            '        | SharePoint.Tables'
            '        | Single.From'
            '        | Soda.Feed'
            '        | Splitter.SplitByNothing'
            '        | Splitter.SplitTextByAnyDelimiter'
            '        | Splitter.SplitTextByDelimiter'
            '        | Splitter.SplitTextByEachDelimiter'
            '        | Splitter.SplitTextByLengths'
            '        | Splitter.SplitTextByPositions'
            '        | Splitter.SplitTextByRanges'
            '        | Splitter.SplitTextByRepeatedLengths'
            '        | Splitter.SplitTextByWhitespace'
            '        | Sql.Database'
            '        | Sql.Databases'
            '        | SqlExpression.SchemaFrom'
            '        | SqlExpression.ToExpression'
            '        | Sybase.Database'
            '        | Table.AddColumn'
            '        | Table.AddIndexColumn'
            '        | Table.AddJoinColumn'
            '        | Table.AddKey'
            '        | Table.AggregateTableColumn'
            '        | Table.AlternateRows'
            '        | Table.Buffer'
            '        | Table.Column'
            '        | Table.ColumnCount'
            '        | Table.ColumnNames'
            '        | Table.ColumnsOfType'
            '        | Table.Combine'
            '        | Table.CombineColumns'
            '        | Table.Contains'
            '        | Table.ContainsAll'
            '        | Table.ContainsAny'
            '        | Table.DemoteHeaders'
            '        | Table.Distinct'
            '        | Table.DuplicateColumn'
            '        | Table.ExpandListColumn'
            '        | Table.ExpandRecordColumn'
            '        | Table.ExpandTableColumn'
            '        | Table.FillDown'
            '        | Table.FillUp'
            '        | Table.FilterWithDataTable'
            '        | Table.FindText'
            '        | Table.First'
            '        | Table.FirstN'
            '        | Table.FirstValue'
            '        | Table.FromColumns'
            '        | Table.FromList'
            '        | Table.FromPartitions'
            '        | Table.FromRecords'
            '        | Table.FromRows'
            '        | Table.FromValue'
            '        | Table.Group'
            '        | Table.HasColumns'
            '        | Table.InsertRows'
            '        | Table.IsDistinct'
            '        | Table.IsEmpty'
            '        | Table.Join'
            '        | Table.Keys'
            '        | Table.Last'
            '        | Table.LastN'
            '        | Table.MatchesAllRows'
            '        | Table.MatchesAnyRows'
            '        | Table.Max'
            '        | Table.MaxN'
            '        | Table.Min'
            '        | Table.MinN'
            '        | Table.NestedJoin'
            '        | Table.Partition'
            '        | Table.PartitionValues'
            '        | Table.Pivot'
            '        | Table.PositionOf'
            '        | Table.PositionOfAny'
            '        | Table.PrefixColumns'
            '        | Table.Profile'
            '        | Table.PromoteHeaders'
            '        | Table.Range'
            '        | Table.RemoveColumns'
            '        | Table.RemoveFirstN'
            '        | Table.RemoveLastN'
            '        | Table.RemoveMatchingRows'
            '        | Table.RemoveRows'
            '        | Table.RemoveRowsWithErrors'
            '        | Table.RenameColumns'
            '        | Table.ReorderColumns'
            '        | Table.Repeat'
            '        | Table.ReplaceErrorValues'
            '        | Table.ReplaceKeys'
            '        | Table.ReplaceMatchingRows'
            '        | Table.ReplaceRelationshipIdentity'
            '        | Table.ReplaceRows'
            '        | Table.ReplaceValue'
            '        | Table.ReverseRows'
            '        | Table.RowCount'
            '        | Table.Schema'
            '        | Table.SelectColumns'
            '        | Table.SelectRows'
            '        | Table.SelectRowsWithErrors'
            '        | Table.SingleRow'
            '        | Table.Skip'
            '        | Table.Sort'
            '        | Table.SplitColumn'
            '        | Table.ToColumns'
            '        | Table.ToList'
            '        | Table.ToRecords'
            '        | Table.ToRows'
            '        | Table.TransformColumnNames'
            '        | Table.TransformColumns'
            '        | Table.TransformColumnTypes'
            '        | Table.TransformRows'
            '        | Table.Transpose'
            '        | Table.Unpivot'
            '        | Table.UnpivotOtherColumns'
            '        | Table.View'
            '        | TableAction.DeleteRows'
            '        | TableAction.UpdateRows'
            '        | Tables.GetRelationships'
            '        | Teradata.Database'
            '        | Text.AfterDelimiter'
            '        | Text.At'
            '        | Text.BeforeDelimiter'
            '        | Text.BetweenDelimiters'
            '        | Text.Clean'
            '        | Text.Combine'
            '        | Text.Contains'
            '        | Text.End'
            '        | Text.EndsWith'
            '        | Text.Format'
            '        | Text.From'
            '        | Text.FromBinary'
            '        | Text.Insert'
            '        | Text.Length'
            '        | Text.Lower'
            '        | Text.Middle'
            '        | Text.NewGuid'
            '        | Text.PadEnd'
            '        | Text.PadStart'
            '        | Text.PositionOf'
            '        | Text.PositionOfAny'
            '        | Text.Proper'
            '        | Text.Range'
            '        | Text.Remove'
            '        | Text.RemoveRange'
            '        | Text.Repeat'
            '        | Text.Replace'
            '        | Text.ReplaceRange'
            '        | Text.Split'
            '        | Text.SplitAny'
            '        | Text.Start'
            '        | Text.StartsWith'
            '        | Text.ToBinary'
            '        | Text.ToList'
            '        | Text.Trim'
            '        | Text.TrimEnd'
            '        | Text.TrimStart'
            '        | Text.Upper'
            '        | Time.EndOfHour'
            '        | Time.From'
            '        | Time.FromText'
            '        | Time.Hour'
            '        | Time.Minute'
            '        | Time.Second'
            '        | Time.StartOfHour'
            '        | Time.ToRecord'
            '        | Time.ToText'
            '        | Type.AddTableKey'
            '        | Type.ClosedRecord'
            '        | Type.Facets'
            '        | Type.ForFunction'
            '        | Type.ForRecord'
            '        | Type.FunctionParameters'
            '        | Type.FunctionRequiredParameters'
            '        | Type.FunctionReturn'
            '        | Type.Is'
            '        | Type.IsNullable'
            '        | Type.IsOpenRecord'
            '        | Type.ListItem'
            '        | Type.NonNullable'
            '        | Type.OpenRecord'
            '        | Type.RecordFields'
            '        | Type.ReplaceFacets'
            '        | Type.ReplaceTableKeys'
            '        | Type.TableColumn'
            '        | Type.TableKeys'
            '        | Type.TableRow'
            '        | Type.TableSchema'
            '        | Type.Union'
            '        | Uri.BuildQueryString'
            '        | Uri.Combine'
            '        | Uri.EscapeDataString'
            '        | Uri.Parts'
            '        | Value.Add'
            '        | Value.As'
            '        | Value.Compare'
            '        | Value.Divide'
            '        | Value.Equals'
            '        | Value.Firewall'
            '        | Value.FromText'
            '        | Value.Is'
            '        | Value.Metadata'
            '        | Value.Multiply'
            '        | Value.NativeQuery'
            '        | Value.NullableEquals'
            '        | Value.RemoveMetadata'
            '        | Value.ReplaceMetadata'
            '        | Value.ReplaceType'
            '        | Value.ResourceExpression'
            '        | Value.Subtract'
            '        | Value.Type'
            '        | Variable.Value'
            '        | Web.Contents'
            '        | Web.Page'
            '        | WebAction.Request'
            '        | Xml.Document'
            '        | Xml.Tables'
            'Action.Return'
            'Action.Sequence'
            'Action.Try'
            'Binary.End'
            'Extension.LoadString'
            'Extension.Module'
            'Percentage.From'
            'SapBusinessWarehouse.Cubes'
            'TableAction.InsertRows'
            'ValueAction.NativeStatement'
            'ValueAction.Replace'
            'Web.SignForOAuth1')
          TokenTypes = 4
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'RuleBegin'
      ConditionList = <
        item
          TagList.Strings = (
            '[')
          TokenTypes = 1024
        end>
      BlockEnd = 'RuleEnd'
      DisplayInTree = False
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'RuleEnd'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            ']')
          TokenTypes = 5120
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'RuleFuncBegin'
      ConditionList = <
        item
          TagList.Strings = (
            '(')
          TokenTypes = 1024
        end
        item
          TagList.Strings = (
            'function')
          TokenTypes = 4
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'RuleFuncEnd'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            ')')
          TokenTypes = 1024
        end>
      BlockEnd = 'RuleFuncBegin'
      HighlightPos = cpAny
      IgnoreAsParent = False
    end>
  CodeTemplates = <>
  SubAnalyzers = <>
  SampleText.Strings = (
    'let '
    '      Area?alculation = (x, y) => '
    '            let '
    '                  Area = x * y, '
    '                  DoubleArea = Area * 2 '
    '            in '
    '            DoubleArea '
    'in '
    ''
    '//dsfdg '
    ''
    'AreaCalculation'
    ''
    'let Orders = Table.FromRecords({  '
    
      '    [OrderID = 1, CustomerID = 1, Item = "fishing rod", Price = ' +
      '100.0],  '
    
      '    [OrderID = 2, CustomerID = 1, Item = "1 lb. worms", Price = ' +
      '5.0],  '
    
      '    [OrderID = 3, CustomerID = 2, Item = "fishing net", Price = ' +
      '25.0]}),  '
    
      '    #"Capitalized Each Word" = Table.TransformColumns(Orders, {"' +
      'Item", Text.Proper})  '
    'in  '
    '    #"Capitalized Each Word"  '
    ''
    'let'
    '   DayPassedInYear = (x) => '
    '       let'
    
      '          MonthList=List.Numbers(1,Date.Month(DateTime.FromText(' +
      'x))-1),'
    '          Year=Date.Year(DateTime.FromText(x)),'
    
      '          DaysInMonthList=List.Transform(MonthList,each Date.Day' +
      'sInMonth(DateTime.FromText(Text.From(Year)&"-"&Text.From(_)&"-01' +
      '")))'
    '       in '
    
      '          Date.Day(DateTime.FromText(x))+List.Sum(DaysInMonthLis' +
      't)')
  TokenTypeNames.Strings = (
    'Unknown'
    'Comment'
    'Identifier'
    'String'
    'Number'
    'Operator')
  Extentions = 'mez'
  LexerName = 'Microsoft Power Query'
  Notes.Strings = (
    
      'Lexer by Alexander Medvedev(Medvosa), https://github.com/medvosa' +
      '/cuda_lexers')
  LineComment = '//'
  Charset = DEFAULT_CHARSET
end
